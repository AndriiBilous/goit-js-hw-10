{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\n\nconst button = document.querySelector('[data-start]');\nbutton.disabled = 'notActive';\n\nlet userSelectedDate = null;\nlet interval = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    interval = userSelectedDate - options.defaultDate;\n    if (userSelectedDate > options.defaultDate) {\n      button.disabled = false;\n    } else if (userSelectedDate < options.defaultDate) {\n      iziToast.show({\n        messageColor: 'white',\n        position: 'topRight',\n        color: 'red',\n        message: 'Please choose a date in the future',\n      });\n    }\n  },\n};\n\nconst calendar = flatpickr(input, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nbutton.addEventListener('click', handlerClick);\n\nlet intervalId = null;\nfunction handlerClick() {\n  button.disabled = 'notActive';\n  input.disabled = 'notActive';\n  intervalId = setInterval(() => {\n    const date = userSelectedDate - Date.now();\n    newTime(convertMs(date));\n    if (date < 1000) {\n      clearInterval(intervalId);\n      input.disabled = false;\n    }\n  }, 1000);\n}\n\nconst span = document.querySelectorAll('.value');\n\nfunction newTime({ days, hours, minutes, seconds }) {\n  [...span][0].textContent = days.toString().padStart(2, '0');\n  [...span][1].textContent = hours.toString().padStart(2, '0');\n  [...span][2].textContent = minutes.toString().padStart(2, '0');\n  [...span][3].textContent = seconds.toString().padStart(2, '0');\n}\n"],"names":["input","button","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","handlerClick","intervalId","date","newTime","span"],"mappings":"8IAQA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EAEjDC,EAAS,SAAS,cAAc,cAAc,EACpDA,EAAO,SAAW,YAElB,IAAIC,EAAmB,KAGvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EACvBF,EAAmBC,EAAQ,YAClCD,EAAmBC,EAAQ,YAC7BF,EAAO,SAAW,GACTC,EAAmBC,EAAQ,aACpCE,EAAS,KAAK,CACZ,aAAc,QACd,SAAU,WACV,MAAO,MACP,QAAS,oCACjB,CAAO,CAEJ,CACH,EAEiBC,EAAUN,EAAOG,CAAO,EAEzC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAX,EAAO,iBAAiB,QAASY,CAAY,EAE7C,IAAIC,EAAa,KACjB,SAASD,GAAe,CACtBZ,EAAO,SAAW,YAClBD,EAAM,SAAW,YACjBc,EAAa,YAAY,IAAM,CAC7B,MAAMC,EAAOb,EAAmB,KAAK,IAAG,EACxCc,EAAQT,EAAUQ,CAAI,CAAC,EACnBA,EAAO,MACT,cAAcD,CAAU,EACxBd,EAAM,SAAW,GAEpB,EAAE,GAAI,CACT,CAEA,MAAMiB,EAAO,SAAS,iBAAiB,QAAQ,EAE/C,SAASD,EAAQ,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAClD,CAAC,GAAGK,CAAI,EAAE,CAAC,EAAE,YAAcR,EAAK,WAAW,SAAS,EAAG,GAAG,EAC1D,CAAC,GAAGQ,CAAI,EAAE,CAAC,EAAE,YAAcP,EAAM,WAAW,SAAS,EAAG,GAAG,EAC3D,CAAC,GAAGO,CAAI,EAAE,CAAC,EAAE,YAAcN,EAAQ,WAAW,SAAS,EAAG,GAAG,EAC7D,CAAC,GAAGM,CAAI,EAAE,CAAC,EAAE,YAAcL,EAAQ,WAAW,SAAS,EAAG,GAAG,CAC/D"}